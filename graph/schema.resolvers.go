package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.30

import (
	"context"
	"github.com/samber/lo"
	"github.com/smallretardedfish/gql-federation/graph/model"
	"github.com/smallretardedfish/gql-federation/storage"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	res, err := r.TodoStore.Save(storage.Todo{
		Text: input.Text,
		User: &storage.User{
			ID: input.UserID,
		},
	})
	if err != nil {
		return nil, err
	}
	todo := TodoToGraph(*res)

	return &todo, nil
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	todos, err := r.TodoStore.GetAll()
	if err != nil {
		return nil, err
	}

	dtos := lo.Map(todos, func(todo *storage.Todo, _ int) *model.Todo {
		res := TodoToGraph(*todo)
		return &res
	})

	return dtos, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
